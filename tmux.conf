set -g default-terminal "screen-256color"


# vi4tw
set -g status-keys vi
setw -g mode-keys vi

set-option -g terminal-overrides ',xterm*:Cr=\E]12;#DC322F\007:Tc'

bind-key R source-file $HOME/.tmux.conf \; \
   display-message "source-file done"

set-option -g focus-events on

set-option -g pane-active-border-fg colour9

set-window-option -g xterm-keys on

# do note wait after esc
set -sg escape-time 0

# increase scrollback buffer size
set-option -g history-limit 50000

# tmux messages are displayed for 4 seconds
set-option -g display-time 4000

# copy/paste with vyp
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer

# Set prefix to Ctrl-Space
unbind C-b
set -g prefix M-Space
bind Space send-prefix

# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-w switch-client -T window
bind-key -T window h if-shell "$is_vim" "send-keys C-w h" "select-pane -L"
bind-key -T window j if-shell "$is_vim" "send-keys C-w j" "select-pane -D"
bind-key -T window k if-shell "$is_vim" "send-keys C-w k" "select-pane -U"
bind-key -T window l if-shell "$is_vim" "send-keys C-w l" "select-pane -R"
bind-key -T window p if-shell "$is_vim" "send-keys C-w p" "select-pane -l"

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind H resize-pane -L "5"
bind J resize-pane -D "5"
bind K resize-pane -U "5"
bind L resize-pane -R "5"

# aggressive resize of window
set-window-option -g aggressive-resize on

# highlight active window
set-window-option -g window-status-current-bg colour9

# save path on new pane
set-environment -g CHERE_INVOKING 1
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

set-window-option -g xterm-keys on

#key bindings -- allowing for tmux over ssh
bind h prev
bind l next
bind H swap-window -t -1
bind L swap-window -t +1
bind < resize-pane -L "5"
bind - resize-pane -D "5"
bind + resize-pane -U "5"
bind > resize-pane -R "5"

bind -n M-F11 set -qg status-bg colour4 \; \
        set-window-option -g window-status-current-bg colour2

bind -n M-F12 set -qg status-bg colour2 \; \
        set-window-option -g window-status-current-bg colour9 \; \
	set -g status-right "#{pane_current_path}"

bind k \
	send-keys M-F12 \; \
	set -qg status-bg colour4 \; \
        set-window-option window-status-current-bg colour2 \; \
	unbind h \; \
	unbind l \; \
	unbind H \; \
	unbind L \; \
        unbind < \; \
        unbind > \; \
        unbind + \; \
        unbind - \; \
        unbind v \; \
        unbind s \; \
	unbind -n C-w \; \
	unbind-key M-Space\; \
	set -g prefix C-q\; \
	bind-key C-q send-prefix

bind j \
	send-keys M-F11 \; \
	set -qg status-bg colour2 \; \
        set-window-option window-status-current-bg colour9 \; \
	bind h  prev \; \
	bind l next \; \
	bind H swap-window -t -1 \; \
	bind L swap-window -t +1 \; \
        bind < resize-pane -L "5"\; \
        bind - resize-pane -D "5"\; \
        bind + resize-pane -U "5"\; \
        bind > resize-pane -R "5"\; \
        bind-key v split-window -h -c "#{pane_current_path}"\; \
        bind-key s split-window -v -c "#{pane_current_path}"\; \
        bind-key -n C-w switch-client -T window \; \
	unbind-key C-q\; \
	set -g prefix M-Space\; \
	bind-key Space send-prefix
